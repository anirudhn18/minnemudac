168/120
.25 + .28 + .12 + .08
(.25 + .28 + .12 + .08)/5
(.25 + .28 + .12 + .08)*40
pbinom(3,12,0.025)
pbinom(3,24,0.025)
?pbinom
pbinom(2,24,0.025)
pbinom(6,24,0.025) - pbinom(1,24,0.025)
pbinom(5,24,0.025) - pbinom(1,24,0.025)
?pnorm
pnorm(10,63.7,2.47)
qnorm(10,63.7,2.47)
qnorm(0.1,63.7,2.47)
qnorm(0.8,63.7,2.47)
qnorm(0.05,96,8.5)
qnorm(0.95,96,8.5)
pnorm(qnorm(0.95,m,s),m,s)
m = 96
s = 8.5
pnorm(qnorm(0.95,m,s),m,s)
pnorm(99,m,s) - pnorm(94,m,s)
pnorm(99,m,s) - pnorm(95,m,s)
1 - pnorm(95,m,s)
5
pnorm(99,m,s) - pnorm(95,m,s)
pnorm(100,m,s) - pnorm(95,m,s)
pnorm(100,m,s) - pnorm(95,m,s)
pnorm(40,40,0.9)
pbinom(40,40,0.9)
dbinom(40,40,0.9)
0.9^40
dnorm(95,m,s)
(4948 - mean_m)/sd_m
mean_m = 4313
sd_m = 583
mean_w = 5261
sd_w = 807
(4948 - mean_m)/sd_m
(5261 - mean_w)/sd_w
(5261 - mean_w)/sd_w
(5513 - mean_w)/sd_w
pnorm(4948,mean_m,sd_m)
1 - pnorm(4948,mean_m,sd_m)
pnorm(5513,mean_m,sd_m)
pnorm(5513,mean_w,sd_w)
1 - pnorm(4948,mean_m,sd_m)
1 - pnorm(5513,mean_w,sd_w)
qnorm(0.05,mean_m,sd_m)
qnorm(0.05,mean_w,sd_w)
qnorm(0.9,mean_w,sd_w)
sqrt(120*0.9*0.1)
pnorm(514,mean,sd)
pnorm(514,mean,sd)
mean = 520
sd = 5
pnorm(514,mean,sd)
pnorm(526,mean,sd)
pnorm(526,mean,sd)
sd = 5/sqrt(10)
pnorm(526,mean,sd)  - pnorm(514,mean,sd)
1 - (pnorm(526,mean,sd)  - pnorm(514,mean,sd))
dbinom(10,0.000147)
?dbinom
dbinom(1,10,0.000147)
mean = 515
1 - (pnorm(526,mean,sd)  - pnorm(514,mean,sd))
dbinom(1,10,0.2635)
pbinom(3,36,0.05)
1 - pbinom(3,36,0.05)
1 - dbinom(0,10,0.000147)
1 - dbinom(1,10,0.000147)
1 - dbinom(0,10,0.000147)
1 - dbinom(0,10,0.000147)
1 - pbinom(0,10,0.000147)
1 - pbinom(1,10,0.000147)
1 - dbinom(0,10,0.000147)
1 - dbinom(0,10,0.16801)
1 - pbinom(3,36,0.05)
mean = 520
sd = 5/sqrt(10)
pnorm(526,mean,sd)  - pnorm(514,mean,sd))
pnorm(526,mean,sd)  - pnorm(514,mean,sd)
?qt
qt(0.025,df = 5,1.7862,)
qt(0.025,df = 5,1.7862)
qt(0.095,df = 5,1.7862)
qt(0.025,df = 11,1.7862)
qt(0.095,df = 11,1.7862)
qt(0.975,df = 11,1.7862)
qt(0.025,df = 11,1.7862)
qt(0.025,df = 11)
qt(0.975,df = 11)
qt(0.05,df = 11,30.7833)
qt(0.95,df = 11,30.7833)
install.packages('readxl')
library(readxl)
wait = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week3/WaitTime.xlsx',col_names = T,)
t.test(wait$WaitTime,cond.level = 0.9)
t.test(wait$WaitTime,cond.level = 0.95)
wait = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week3/WaitTime.xlsx',
col_names = T,)
qt(0.05,df = 11)
dt(0.05,df = 11)
qt(0.05,df = 11)
qt(0.95,df = 11,30.7833)
qt(0.95,df = 11)
qt(0.95,df = 11) + 30.7833
qt(0.95,df = 11)*(1.7862/sqrt(11)) + 30.7833
qt(0.95,df = 11,lower.tail = T)*(1.7862/sqrt(11)) + 30.7833
qt(0.05,df = 11)*(1.7862/sqrt(11)) + 30.7833
qt(0.95,df = 11,lower.tail = T)*(1.7862/sqrt(12)) + 30.7833
qt(0.05,df = 11)*(1.7862/sqrt(12)) + 30.7833
poll  = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week3/Poll.xlsx',
col_names = T)
table(poll$Votes)
358/(358 + 407)
p = 358/(358 + 407)
p + qt(0.025,764)
p + qt(0.025,764)*(sqrt(p*(1-p)/765))
p + qt(0.975,764)*(sqrt(p*(1-p)/765))
prop.test(358,765,0.95)
qnorm(0.025,0,1)
qnorm(0.025,0,1)*sqrt(0.0025/800)
qnorm(0.095,0,1)*sqrt(0.0025/800)
qnorm(0.975,0,1)*sqrt(0.0025/800)
qnorm(0.025,0,1)*sqrt(0.25/800)
qt(0.05)
qt(0.05,10)
qt(0.05,1)
library(readxl)
rm(list=ls())
flower = read_excel('C:\Users\Anirudh Narayanan\Desktop\srs stuff\Summer\Stats\week3\assignment\Flower.xlsx')
flower = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week3/assignment/Flower.xlsx')
t.test(flower$amount)
t.test(flower$amount,conf.level = 0.8)
prop.test(sum(flower$dissatisfied),nrow(flower),conf.level = 0.85)
sum(flower$dissatisfied)
View(flower)
View(flower)
table(flower$day)
?qt
rnorm(mean = 250000, sd = 37500, n = 5)
t.test(gg, alternative =  "greater",conf.level = 0.9, mu = 210250)
gg = rnorm(mean = 250000, sd = 37500, n = 5)
t.test(gg, alternative =  "greater",conf.level = 0.9, mu = 210250)
t.test(supp$Times,alternative = 'greater', mu = 60)
supp = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week4/Supplier.xlsx',
col_names = T,)
t.test(supp$Times,alternative = 'greater', mu = 60)
library(readxl)
supp = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week4/Supplier.xlsx',
col_names = T,)
t.test(supp$Times,alternative = 'greater', mu = 60)
smoke = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week4/Smoking.xlsx',
col_names = T,)
s_males = smoke[which(smoke$sex =="Male"),]
s_females = smoke[which(smoke$sex =="Female"),]
table(s_males$smoke)
prop.test(187,726,alternative = "less")
table(s_males$smoke)
prop.test(187,726,alternative = "less")
table(s_females$smoke)
prop.test(234,965,alternative = "less")
539/4
731/234
731/4
726/4
t.test(supp$Times,alternative = 'greater', mu = 60)
prop.test(234,965,.25,alternative = "less")
prop.test(187,726,.25,alternative = "less")
t.test(supp$Times,alternative = 'greater', mu = 60)
t.test(supp$Times,alternative = 'less', mu = 60)
t.test(supp$Times,alternative = 'greater', mu = 60)
diff(c(1,2,3,4))
?mids
??mids
?hist
shapiro.test(supp$Times)
wait = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week4/Courier.xlsx',
col_names = T,)
library(readxl)
wait = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week4/Courier.xlsx',
col_names = T,)
library(readxl)
wait = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week4/Courier.xlsxC:/Users/Anirudh Narayanan/Desktop/Some stuff/msba stuff/Summer/Stats/week4/Courier.xlsx',
col_names = T,)
library(readxl)
wait = read_excel('C:/Users/Anirudh Narayanan/Desktop/srs stuff/Summer/Stats/week4/Courier.xlsx',
col_names = T,)
library(readxl)
wait = read_excel('C:\Users\Anirudh Narayanan\Desktop\Some stuff\msba stuff\Summer\Stats\week4',
col_names = T,)
library(readxl)
wait = read_excel('C:/Users/Anirudh Narayanan/Desktop/Some stuff/msba stuff/Summer/Stats/week4',
col_names = T,)
library(readxl)
wait = read_excel('C:/Users/Anirudh Narayanan/Desktop/Some stuff/msba stuff/Summer/Stats/week4/Courier.xlsx',
col_names = T,)
t.test(wait$Packages,alternative = 'greater', mu = 360)
shapiro.test(wait$Packages
shapiro.test(wait$Packages)
shapiro.test(wait$Packages)
install.packages('twitteR')
install.packages('ROAuth')
library(twitteR)
library(ROAuth)
getTwitterOAuth('GZgjCYsBjnLN8qK2mdbAKCrv9','lrbejAaTykevsYlUx7HWPKSEX6TCCCsWMOeFsH0lHY8hd69CAi')
setup_twitter_oauth('GZgjCYsBjnLN8qK2mdbAKCrv9','lrbejAaTykevsYlUx7HWPKSEX6TCCCsWMOeFsH0lHY8hd69CAi')
setup_twitter_oauth('GZgjCYsBjnLN8qK2mdbAKCrv9','lrbejAaTykevsYlUx7HWPKSEX6TCCCsWMOeFsH0lHY8hd69CAi')
setup_twitter_oauth('GZgjCYsBjnLN8qK2mdbAKCrv9',
'lrbejAaTykevsYlUx7HWPKSEX6TCCCsWMOeFsH0lHY8hd69CAi',
'742533557856374784-a5H5ZIHwMH3cTwBufYL8KWmfYwYyINt',
'D7rHas8ILcpspvls1Bald8m4aDrhyMWl7193iXdxDvixp')
getTwitterOAuth('GZgjCYsBjnLN8qK2mdbAKCrv9','lrbejAaTykevsYlUx7HWPKSEX6TCCCsWMOeFsH0lHY8hd69CAi')
searchTwitter('Trump',n=100)
test = searchTwitter('Trump',n=100)
class(test)
length(test)
dim(test)
test[1]
test[[1]]
test[[1]][1]
test = searchTwitter('Trump',n=100,since = '2016-10-07')
test = searchTwitter('Trump',n=100,since = '2016-10-06')
test = searchTwitter('Trump',n=100,since = 2016-10-06)
test = searchTwitter('Trump',n=100,since = '2016-06-10')
test = searchTwitter('trump|Trump',since = '2016-06-10')
length(test)
test
test = searchTwitter('philando',since = '2016-06-10')
length(test)
test
test = searchTwitter('Philando',since = '2016-06-10')
length(test)
test = searchTwitter('Philando',since = '2015-06-10')
length(test)
test = searchTwitter('Philando',since = '2016-06-10',n=1000)
length(test)
test = searchTwitter('',since = '2016-06-10',n=1000)
length(test)
test = searchTwitter('z',since = '2016-06-10',n=1000)
?chisq.test
obs = c(2229,1157,457,232)
exp = c(0.429,0.267,0.026,0.278)
chisq.test(obs,p = exp)
0.26*4075
0.026*4075
exp*4075
obs = c(2229,1157,457,232)
obs_p = obs/4075
chisq.test(obs_p,p = exp)
install.packages('twitteR')
install.packages('ROAuth')
install.packages("twitteR")
install.packages("twitteR")
install.packages("twitteR")
library(twitteR)
library(ROAuth)
sum((obs-exp)^2/exp)
sum((obs-exp*4075)^2/exp)
sum((obs-exp*4075)^2/exp*4075)
sum((obs-exp*4075)^2/(exp*4075))
(obs-exp*4075)^2/(exp*4075)
library(readxl)
wait = read_excel('C:/Users/Anirudh Narayanan/Desktop/Some stuff/msba stuff/Summer/Stats/ANOVA/Gasoline.xlsx',
col_names = T,)
View(wait)
table(wait$`Second-last`)
s_last = table(wait$`Second-last`)
s_last = table(wait$`Second-last`)
s_last
s_last/sum(s_last)
sum(s_last/sum(s_last))
table(wait$`Second-last`,wait$Last)
last/sum(last)
s_last = table(wait$`Second-last`)
s_last/sum(s_last)
last = table(wait$Last)
last/sum(last)
observed = table(wait$`Second-last`,wait$Last)
chisq.test(observed)
chisq.test(observed)$expected
exp = chisq.test(observed)$expected
(exp - observed)^2/exp
chol = read_excel('C:/Users/Anirudh Narayanan/Desktop/Some stuff/msba stuff/Summer/Stats/ANOVA/Cholesterol.xlsx',
col_names = T,)
View(chol)
chol = read_excel('C:/Users/Anirudh Narayanan/Desktop/Some stuff/msba stuff/Summer/Stats/ANOVA/Cholesterol.xlsx',
col_names = T,)
gg = aov( chol$CholReduction ~ chol$Drug)
gg
no_na = chol[which(! is.na(chol$Drug)),]
View(no_na)
no_na = chol[which(! is.na(chol$Drug)),c(1,2)]
summary(fit)
fit = aov( chol$CholReduction ~ chol$Drug)
summary(fit)
TukeyHSD(fit)
dist = rnorm(n = 5,mean = 250000,sd = 37500)
t.test(dist,mu=210250,alternative = 'greater')
t = (250000-210250)/(37500/sqrt(5))
dist = rnorm(n = 5,mean = 250000,sd = 37500)
t.test(dist,mu=210250,alternative = 'greater')
dist = rnorm(n = 5,mean = 250000,sd = 37500)
t.test(dist,mu=210250,alternative = 'greater')
dist = rnorm(n = 5,mean = 250000,sd = 37500)
t.test(dist,mu=210250,alternative = 'greater')
t = (250000-210250)/(37500/sqrt(5))
1 -pt(t,4)
250000 + t*37500/sqrt(5)
250000 + t*37500/sqrt(5)
250000 - t*37500/sqrt(5)
t_alph = qt(0.95,4)
t_alph = qt(0.95,4)
t_alph2 = qt(0.05,4)
250000 + t_alph*37500/sqrt(5)
250000 + t_alph2*37500/sqrt(5)
rm(list = ls())
test
# install.packages('twitteR')
# install.packages('ROAuth')
library(twitteR)
library(ROAuth)
getTwitterOAuth('GZgjCYsBjnLN8qK2mdbAKCrv9','lrbejAaTykevsYlUx7HWPKSEX6TCCCsWMOeFsH0lHY8hd69CAi')
setup_twitter_oauth('GZgjCYsBjnLN8qK2mdbAKCrv9',
'lrbejAaTykevsYlUx7HWPKSEX6TCCCsWMOeFsH0lHY8hd69CAi',
'742533557856374784-a5H5ZIHwMH3cTwBufYL8KWmfYwYyINt',
'D7rHas8ILcpspvls1Bald8m4aDrhyMWl7193iXdxDvixp')
test = searchTwitter('z',since = '2016-06-10',n=1000)
rm(list = ls())
misspell = read.csv('misspellings.csv'')
''
misspell = read.csv('misspellings.csv')
colnames(misspell) = c('wrong','right')
View(misspell)
misspell = read.csv('misspellings.csv', stringsAsFactors = F)
colnames(misspell) = c('wrong','right')
View(misspell)
list('gg')
c('gg')
split('gg')
strsplit('char')[4]
strsplit('char',split)[4]
strsplit('char',fixed = T)[4]
strsplit('char',split = [])[4]
strsplit('char',split = c())[4]
strsplit('char',split = c())
strsplit('char',split = c())[1][4]
strsplit('char',split = c())[[1]][4]
strsplit(c('char1','char2'),split = c())[[1]][4]
strsplit(c('char1','char2'),split = c())
word_diff = function(row){
right_len = nchar(row$right)
wrong_len = nchar(row$wrong)
count = 0
for (i in range(1: min(right_len,wrong_len)){
if (strsplit(row$right)[[1]][i] != strsplit(row$wrong)[[1]][i]){
count = count + 1
}
}
count = count + abs(right_len - wrong_len)
}
word_diff = function(row){
right_len = nchar(row$right)
wrong_len = nchar(row$wrong)
count = 0
for (i in range(1: min(right_len,wrong_len))){
if (strsplit(row$right)[[1]][i] != strsplit(row$wrong)[[1]][i]){
count = count + 1
}
}
count = count + abs(right_len - wrong_len)
}
apply(misspell,word_diff)
lapply(misspell,word_diff)
word_diff = function(row){
right_len = nchar(right)
wrong_len = nchar(wrong)
count = 0
for (i in range(1: min(right_len,wrong_len))){
if (strsplit(right)[[1]][i] != strsplit(wrong)[[1]][i]){
count = count + 1
}
}
count = count + abs(right_len - wrong_len)
}
lapply(misspell,word_diff)
word_diff = function(row){
right_len = nchar(row[2])
wrong_len = nchar(row[1])
count = 0
for (i in range(1: min(right_len,wrong_len))){
if (strsplit(row[1])[[1]][i] != strsplit(row[2])[[1]][i]){
count = count + 1
}
}
count = count + abs(right_len - wrong_len)
}
lapply(misspell,word_diff)
word_diff = function(row){
right_len = nchar(row[2])
wrong_len = nchar(row[1])
count = 0
for (i in range(1: min(right_len,wrong_len))){
if (strsplit(row[1],split = c())[[1]][i] != strsplit(row[2],split = c())[[1]][i]){
count = count + 1
}
}
count = count + abs(right_len - wrong_len)
}
lapply(misspell,word_diff)
word_diff = function(row){
right_len = nchar(row[2])
wrong_len = nchar(row[1])
count = 0
for (i in range(1: min(right_len,wrong_len))){
if (strsplit(row[1],split = c())[[1]][i] != strsplit(row[2],split = c())[[1]][i]){
count = count + 1
}
}
count = count + abs(right_len - wrong_len)
return(count)
}
lapply(misspell,word_diff)
lapply(misspell,1,word_diff)
apply(misspell,1,word_diff)
DUMP top5Posts;
```
install.packages("bigrquery")
library(bigrquery)
project = "mudac-1901"
sql = "SELECT year FROM [phdata-hadoop:bridgethegap.AchievementGap_Math] LIMIT 1000"
df = query_exec(sql, project = project)
sql = "SELECT year FROM [datadive-142319:mces_lakes.1999_2014_monitoring_data] LIMIT 10"
df = query_exec(sql, project = project)
df = query_exec(sql, project = project)
sql = "SELECT * FROM [datadive-142319:mces_lakes.1999_2014_monitoring_data] LIMIT 10"
df = query_exec(sql, project = project)
View(df)
-- creating the hive table
create table yelpstores
(
store_id int,
url string,
storename string,
city string,
zip string,
phone string,
website string,
neighborhood string,
rating float,
num_reviews int
)
row format delimited fields terminated by '\t'
stored as textfile;
-- loading data into table
load data local inpath 'yelpstores.txt' into table yelpstores;
-- inspecting top 5 rows
select * from yelpstores limit 5;
-- 7	/biz/skillet-diner-capitol-hill-seattle-2	Skillet Diner - Capitol Hill	Seattle, WA	98122	(206) 512-2001	skilletstreetfood.com	Central District	4	787
-- 10	/biz/bin-on-the-lake-kirkland	Bin On The Lake	Kirkland, WA	98033	(425) 822-3700	binonthelake.com		NULL	103-- 11	/biz/bar-del-corso-seattle	Bar Del Corso	Seattle, WA	98144	(206) 395-2069	bardelcorso.com	Beacon Hill	4	154
-- 13	/biz/homegrown-seattle-3	Homegrown	Seattle, WA	98119	(206) 217-4745	eathomegrown.com	Queen Anne	NULL	113
-- 14	/biz/lola-seattle	Lola	Seattle, WA	98121	(206) 441-1430	tomdouglas.com	Belltown	4	1446
-- Time taken: 3.06 seconds
-- top 5 cities by number of restaurants
set hive.cli.print.header=true;
select city, count(*) as number_of_restaurants from yelpstores group by city order by number_of_restaurants desc limit 5;
-- city	number_of_restaurants
-- Seattle, WA	1684
-- Bellevue, WA	160
-- Lynnwood, WA	85
-- Tacoma, WA	82
-- Kirkland, WA	81
-- Time taken: 36.327 seconds
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr) #Attaching dplyr library
library(tidyr) #Attaching tidyr library
#install.packages("lubridate")
library(lubridate) #R library to work with date times.
#install.packages("fastcluster")
library(fastcluster)
memory.limit(100000)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr) #Attaching dplyr library
library(tidyr) #Attaching tidyr library
#install.packages("lubridate")
library(lubridate) #R library to work with date times.
#install.packages("fastcluster")
library(fastcluster)
#install.packages('data.table')
library(data.table)
#install.packages("cluster")
library(cluster)
#install.packages("klaR")
library(klaR)
#install.packages("fpc")
library(fpc)
setwd("C:/Users/Anirudh Narayanan/Google Drive/minnemudac")
quality = read.csv( "qlty.csv" )
lm("yr ~ qlty*factor(lake_name", data= quality)
lm(yr ~ qlty*factor(lake_name), data= quality)
model = lm(yr ~ qlty*factor(lake_name), data= quality)
summary(model)
write.csv(summary(model))
model$effects
names(model)
summary(model)
model = lm(qlty ~ yr*factor(lake_name), data= quality)
summary(model)
